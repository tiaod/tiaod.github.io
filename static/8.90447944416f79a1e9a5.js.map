{"version":3,"sources":["webpack:///8.90447944416f79a1e9a5.js","webpack:///./src/industrywar/pages/d3.vue?0a71","webpack:///./src/industrywar/pages/d3.vue?8df7","webpack:///./~/d3/d3.js","webpack:///./src/industrywar/pages/d3.vue?5b93","webpack:///./src/industrywar/pages/d3.vue?789a","webpack:///./src/industrywar/pages/d3.vue"],"names":["webpackJsonp","165","module","exports","__webpack_require__","d3","graph","height","width","window","innerWidth","innerHeight","nodes","id","links","source","target","ready","force","link","node","nodeById","svg","layout","charge","linkDistance","size","select","this","$el","attr","onresize","map","forEach","set","get","start","selectAll","data","enter","append","style","d","call","drag","on","x","y","189","push","version","sources","names","mappings","file","sourcesContent","sourceRoot","207","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_transposeLength","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","listenerByName","listener","indexOf","concat","remove","d3_eventPreventDefault","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","212","content","locals","252","276","__vue_script__","__vue_template__","__esModule","options"],"mappings":"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","file":"8.90447944416f79a1e9a5.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 165:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar d3, graph, height, width;\n\t\n\td3 = __webpack_require__(207);\n\t\n\twindow.d3 = d3;\n\t\n\twidth = window.innerWidth;\n\t\n\theight = window.innerHeight;\n\t\n\tgraph = {\n\t  \"nodes\": [\n\t    {\n\t      \"id\": \"red\"\n\t    }, {\n\t      \"id\": \"orange\"\n\t    }, {\n\t      \"id\": \"yellow\"\n\t    }, {\n\t      \"id\": \"green\"\n\t    }, {\n\t      \"id\": \"blue\"\n\t    }, {\n\t      \"id\": \"violet\"\n\t    }\n\t  ],\n\t  \"links\": [\n\t    {\n\t      \"source\": \"red\",\n\t      \"target\": \"yellow\"\n\t    }, {\n\t      \"source\": \"red\",\n\t      \"target\": \"blue\"\n\t    }, {\n\t      \"source\": \"green\",\n\t      \"target\": \"violet\"\n\t    }, {\n\t      \"source\": \"orange\",\n\t      \"target\": \"green\"\n\t    }, {\n\t      \"source\": \"green\",\n\t      \"target\": \"red\"\n\t    }\n\t  ]\n\t};\n\t\n\tmodule.exports = {\n\t  ready: function() {\n\t    var force, link, node, nodeById, svg;\n\t    force = d3.layout.force().charge(-800).linkDistance(40).size([width, height]);\n\t    svg = d3.select(this.$el).attr(\"width\", width).attr(\"height\", height);\n\t    window.onresize = function() {\n\t      return svg.attr(\"width\", window.innerWidth).attr(\"height\", window.innerHeight);\n\t    };\n\t    nodeById = d3.map();\n\t    graph.nodes.forEach(function(node) {\n\t      return nodeById.set(node.id, node);\n\t    });\n\t    graph.links.forEach(function(link) {\n\t      link.source = nodeById.get(link.source);\n\t      return link.target = nodeById.get(link.target);\n\t    });\n\t    force.nodes(graph.nodes).links(graph.links).start();\n\t    link = svg.selectAll(\".link\").data(graph.links).enter().append(\"line\").attr(\"class\", \"link\");\n\t    node = svg.selectAll(\".node\").data(graph.nodes).enter().append(\"circle\").attr(\"class\", \"node\").attr(\"r\", 16).style(\"fill\", function(d) {\n\t      return 'blue';\n\t    }).call(force.drag);\n\t    return force.on(\"tick\", function() {\n\t      link.attr(\"x1\", function(d) {\n\t        return d.source.x;\n\t      }).attr(\"y1\", function(d) {\n\t        return d.source.y;\n\t      }).attr(\"x2\", function(d) {\n\t        return d.target.x;\n\t      }).attr(\"y2\", function(d) {\n\t        return d.target.y;\n\t      });\n\t      return node.attr(\"cx\", function(d) {\n\t        return d.x;\n\t      }).attr(\"cy\", function(d) {\n\t        return d.y;\n\t      });\n\t    });\n\t  }\n\t};\n\n\n/***/ },\n\n/***/ 189:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".node{stroke:#000;stroke-width:1.5px}.link{stroke:#999;stroke-width:1.5px}\", \"\", {\"version\":3,\"sources\":[\"/./src/industrywar/pages/d3.vue\"],\"names\":[],\"mappings\":\"AAMA,MACE,YAAa,AACb,kBAAoB,CACrB,AAED,MACE,YAAa,AACb,kBAAoB,CACrB\",\"file\":\"d3.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n.node {\\n  stroke: #000;\\n  stroke-width: 1.5px;\\n}\\n\\n.link {\\n  stroke: #999;\\n  stroke-width: 1.5px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n\n/***/ 207:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n\n/***/ 212:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(189);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(4)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./d3.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./d3.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 252:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<svg></svg>\";\n\n/***/ },\n\n/***/ 276:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(212)\n\t__vue_script__ = __webpack_require__(165)\n\t__vue_template__ = __webpack_require__(252)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 8.90447944416f79a1e9a5.js\n **/","# <!-- 这里是D3开发测试。 -->\n# <template lang=\"jade\">\n# svg\n# </template>\n#\n# <style>\n#   .node {\n#     stroke: #000;\n#     stroke-width: 1.5px;\n#   }\n#\n#   .link {\n#     stroke: #999;\n#     stroke-width: 1.5px;\n#   }\n# </style>\n# <script lang=\"coffee\">\r\nd3 = require \"d3\"\r\nwindow.d3 = d3\r\n\r\nwidth = window.innerWidth\r\nheight = window.innerHeight\r\n\r\ngraph = {\r\n  \"nodes\": [\r\n    {\"id\": \"red\"},\r\n    {\"id\": \"orange\"},\r\n    {\"id\": \"yellow\"},\r\n    {\"id\": \"green\"},\r\n    {\"id\": \"blue\"},\r\n    {\"id\": \"violet\"}\r\n  ],\r\n  \"links\": [\r\n    {\"source\": \"red\", \"target\": \"yellow\"},\r\n    {\"source\": \"red\", \"target\": \"blue\"},\r\n    {\"source\": \"green\", \"target\": \"violet\"},\r\n    {\"source\": \"orange\", \"target\": \"green\"},\r\n    {\"source\":\"green\",\"target\":\"red\"}\r\n  ]\r\n}\r\n\r\n\r\nmodule.exports=\r\n  ready:->\r\n    force = d3.layout.force()\r\n      .charge(-800)\r\n      .linkDistance(40)\r\n      .size([width, height])\r\n    svg = d3.select(@$el)\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n    window.onresize =->\r\n      svg\r\n        .attr(\"width\", window.innerWidth)\r\n        .attr(\"height\",window.innerHeight)\r\n    nodeById = d3.map()\r\n    graph.nodes.forEach (node)->\r\n      nodeById.set(node.id, node) #设置一个map，将id与node实体映射。\r\n    graph.links.forEach (link)->\r\n      link.source = nodeById.get(link.source) #将字符串的对象转化为实体\r\n      link.target = nodeById.get(link.target)\r\n    force\r\n      .nodes(graph.nodes)\r\n      .links(graph.links)\r\n      .start()\r\n    link = svg.selectAll(\".link\")\r\n      .data(graph.links)\r\n      .enter().append(\"line\")\r\n      .attr(\"class\", \"link\")\r\n    node = svg.selectAll(\".node\")\r\n      .data(graph.nodes)\r\n      .enter().append(\"circle\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"r\", 16)\r\n      .style(\"fill\", (d)-> 'blue')\r\n      .call(force.drag)\r\n    force.on \"tick\",->\r\n      link.attr(\"x1\",(d)->d.source.x)\r\n        .attr(\"y1\",(d)->d.source.y)\r\n        .attr(\"x2\",(d)->d.target.x)\r\n        .attr(\"y2\",(d)->d.target.y)\r\n      node.attr \"cx\",(d)->d.x\r\n        .attr \"cy\",(d)->d.y\r\n\r\n# </script>\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/vue-loader/lib/selector.js?type=script&index=0!./src/industrywar/pages/d3.vue\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".node{stroke:#000;stroke-width:1.5px}.link{stroke:#999;stroke-width:1.5px}\", \"\", {\"version\":3,\"sources\":[\"/./src/industrywar/pages/d3.vue\"],\"names\":[],\"mappings\":\"AAMA,MACE,YAAa,AACb,kBAAoB,CACrB,AAED,MACE,YAAa,AACb,kBAAoB,CACrB\",\"file\":\"d3.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n.node {\\n  stroke: #000;\\n  stroke-width: 1.5px;\\n}\\n\\n.link {\\n  stroke: #999;\\n  stroke-width: 1.5px;\\n}\\n\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/industrywar/pages/d3.vue\n ** module id = 189\n ** module chunks = 8\n **/","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 207\n ** module chunks = 8\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./d3.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./d3.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./d3.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/industrywar/pages/d3.vue\n ** module id = 212\n ** module chunks = 8\n **/","module.exports = \"<svg></svg>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-loader.js?raw&engine=jade!./~/vue-loader/lib/selector.js?type=template&index=0!./src/industrywar/pages/d3.vue\n ** module id = 252\n ** module chunks = 8\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./d3.vue\")\n__vue_script__ = require(\"!!coffee!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./d3.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-loader.js?raw&engine=jade!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./d3.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/industrywar/pages/d3.vue\n ** module id = 276\n ** module chunks = 8\n **/"],"sourceRoot":""}